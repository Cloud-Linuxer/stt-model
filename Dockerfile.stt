# STT Streaming Server with Whisper Medium + VAD
# GPU-accelerated speech-to-text service with voice activity detection

FROM nvidia/cuda:12.4.1-devel-ubuntu22.04

# Prevent interactive prompts during build
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV CUDA_VISIBLE_DEVICES=0

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3.10 \
    python3.10-dev \
    python3-pip \
    git \
    wget \
    curl \
    ffmpeg \
    libsndfile1 \
    libgomp1 \
    && rm -rf /var/lib/apt/lists/*

# Set Python 3.10 as default
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.10 1 \
    && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1

# Upgrade pip
RUN python -m pip install --upgrade pip setuptools wheel

# Create app directory
WORKDIR /app

# Install PyTorch with CUDA support
RUN pip install torch==2.1.0 torchvision==0.16.0 torchaudio==2.1.0 --index-url https://download.pytorch.org/whl/cu121

# Install faster-whisper and dependencies
RUN pip install \
    faster-whisper==1.0.3 \
    ctranslate2==4.3.1 \
    flask==3.0.0 \
    flask-sock==0.7.0 \
    soundfile==0.12.1 \
    numpy==1.24.3 \
    requests==2.31.0 \
    websocket-client==1.7.0 \
    python-multipart==0.0.6

# Create models directory
RUN mkdir -p /app/models

# Copy application files
COPY web_server_streaming.py /app/
COPY templates/ /app/templates/

# Download Whisper Medium model on build (optional - can be done at runtime)
# RUN python -c "from faster_whisper import WhisperModel; WhisperModel('medium', device='cpu', download_root='/app/models')"

# Health check endpoint
HEALTHCHECK --interval=30s --timeout=10s --retries=5 \
    CMD curl -f http://localhost:5000/api/config || exit 1

# Expose ports
EXPOSE 5000

# Set entrypoint
ENTRYPOINT ["python", "web_server_streaming.py"]